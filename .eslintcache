[{"/Users/BenKimball/workspace/fitnessforward/src/index.js":"1","/Users/BenKimball/workspace/fitnessforward/src/components/FitnessForward.js":"2","/Users/BenKimball/workspace/fitnessforward/src/components/ApplicationViews.js":"3","/Users/BenKimball/workspace/fitnessforward/src/components/nav/NavBar.js":"4","/Users/BenKimball/workspace/fitnessforward/src/components/auth/Login.js":"5","/Users/BenKimball/workspace/fitnessforward/src/components/auth/Register.js":"6","/Users/BenKimball/workspace/fitnessforward/src/components/Home.js":"7","/Users/BenKimball/workspace/fitnessforward/src/components/workout/WorkoutList.js":"8","/Users/BenKimball/workspace/fitnessforward/src/components/workout/WorkoutForm.js":"9","/Users/BenKimball/workspace/fitnessforward/src/components/exercise/ExerciseForm.js":"10","/Users/BenKimball/workspace/fitnessforward/src/components/workout/WorkoutDetail.js":"11","/Users/BenKimball/workspace/fitnessforward/src/components/exercise/ExerciseDetail.js":"12","/Users/BenKimball/workspace/fitnessforward/src/components/exercise/ExerciseProvider.js":"13","/Users/BenKimball/workspace/fitnessforward/src/components/workout/WorkoutProvider.js":"14","/Users/BenKimball/workspace/fitnessforward/src/components/exercise/ExerciseList.js":"15","/Users/BenKimball/workspace/fitnessforward/src/components/workout/WorkoutCard.js":"16","/Users/BenKimball/workspace/fitnessforward/src/components/exercise/ExerciseCard.js":"17","/Users/BenKimball/workspace/fitnessforward/src/components/PropsAndState.js":"18","/Users/BenKimball/workspace/fitnessforward/src/components/auth/Logout.js":"19"},{"size":376,"mtime":1611947979613,"results":"20","hashOfConfig":"21"},{"size":819,"mtime":1612973540157,"results":"22","hashOfConfig":"21"},{"size":2403,"mtime":1612973540152,"results":"23","hashOfConfig":"21"},{"size":902,"mtime":1612975933510,"results":"24","hashOfConfig":"21"},{"size":2176,"mtime":1612973540161,"results":"25","hashOfConfig":"21"},{"size":3481,"mtime":1612543123284,"results":"26","hashOfConfig":"21"},{"size":283,"mtime":1612973540158,"results":"27","hashOfConfig":"21"},{"size":973,"mtime":1612973540176,"results":"28","hashOfConfig":"21"},{"size":4833,"mtime":1612994797025,"results":"29","hashOfConfig":"21"},{"size":4478,"mtime":1612973540166,"results":"30","hashOfConfig":"21"},{"size":2448,"mtime":1612994184420,"results":"31","hashOfConfig":"21"},{"size":1191,"mtime":1612973540165,"results":"32","hashOfConfig":"21"},{"size":2015,"mtime":1612973540169,"results":"33","hashOfConfig":"21"},{"size":2143,"mtime":1612973540177,"results":"34","hashOfConfig":"21"},{"size":1036,"mtime":1612973540168,"results":"35","hashOfConfig":"21"},{"size":411,"mtime":1612994168414,"results":"36","hashOfConfig":"21"},{"size":552,"mtime":1612973540163,"results":"37","hashOfConfig":"21"},{"size":151,"mtime":1612973540160,"results":"38","hashOfConfig":"21"},{"size":308,"mtime":1612973540163,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"pbx1j6",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/BenKimball/workspace/fitnessforward/src/index.js",[],["83","84"],"/Users/BenKimball/workspace/fitnessforward/src/components/FitnessForward.js",[],"/Users/BenKimball/workspace/fitnessforward/src/components/ApplicationViews.js",[],"/Users/BenKimball/workspace/fitnessforward/src/components/nav/NavBar.js",["85"],"/Users/BenKimball/workspace/fitnessforward/src/components/auth/Login.js",["86"],"import React, { useRef } from \"react\"\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\"\nimport \"./Login.css\"\n\n\nexport const Login = props => {\n    const email = useRef()\n    const password = useRef()\n    const existDialog = useRef()\n    const history = useHistory()\n\n    const existingUserCheck = () => {\n        return fetch(`http://localhost:8088/users?email=${email.current.value}`)\n            .then(res => res.json())\n            .then(user => user.length ? user[0] : false)\n    }\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n\n        existingUserCheck()\n            .then(exists => {\n                if (exists) {\n                    localStorage.setItem(\"fitnessforward_user\", exists.id)\n                    history.push(\"/workouts\")\n                } else {\n                    existDialog.current.showModal()\n                }\n            })\n    }\n\n    return (\n        <main className=\"container--login\">\n            <dialog className=\"dialog dialog--auth\" ref={existDialog}>\n                <div>User does not exist</div>\n                <button className=\"button--close\" onClick={e => existDialog.current.close()}>Close</button>\n            </dialog>\n\n            <section>\n                <form className=\"form--login\" onSubmit={handleLogin}>\n                    <h1>Fitness Forward</h1>\n                    <h2>Please sign in</h2>\n                    <fieldset>\n                        <label htmlFor=\"inputEmail\"> Email address </label>\n                        <input ref={email} type=\"email\"\n                            id=\"email\"\n                            className=\"form-control\"\n                            placeholder=\"Email address\"\n                            required autoFocus />\n                    </fieldset>\n                    <fieldset>\n                        <button type=\"submit\">\n                            Sign in\n                        </button>\n                    </fieldset>\n                </form>\n            </section>\n            <section className=\"link--register\">\n                <Link to=\"/register\">Not a member yet?</Link>\n            </section>\n        </main>\n    )\n}\n","/Users/BenKimball/workspace/fitnessforward/src/components/auth/Register.js",[],"/Users/BenKimball/workspace/fitnessforward/src/components/Home.js",[],"/Users/BenKimball/workspace/fitnessforward/src/components/workout/WorkoutList.js",["87"],"import React, { useContext, useEffect } from \"react\"\nimport { WorkoutContext } from \"./WorkoutProvider\"\nimport { WorkoutCard } from \"./WorkoutCard\"\nimport \"./Workout.css\"\nimport { useHistory } from \"react-router-dom\"\n//import \"bootstrap/dist/css/bootstrap.min.css\"\n\nexport const WorkoutList = () => {\n  // This state changes when `getAnimals()` is invoked below\n  const { workouts, getWorkouts } = useContext(WorkoutContext)\n\n  //useEffect - reach out to the world for something\n  useEffect(() => {\n    console.log(\"WorkoutList: useEffect - getWorkouts\")\n    getWorkouts()\n\n  }, [])\n\n  const history = useHistory()\n\n  return (\n    <>\n     <h2>Previous Workouts</h2>\n           <button onClick={() => {history.push(\"/workouts/create\")}}>\n                Add Workout\n            </button>  \n        <div className=\"workouts\"></div>\n    <div className=\"workouts\">\n      {console.log(\"WorkoutList: Render\", workouts)}\n      {\n        workouts.map(workout => {\n          return <WorkoutCard key={workout.id} workout={workout} />\n        })\n      }\n    </div>\n    </>\n  )\n}","/Users/BenKimball/workspace/fitnessforward/src/components/workout/WorkoutForm.js",["88","89"],"/Users/BenKimball/workspace/fitnessforward/src/components/exercise/ExerciseForm.js",["90"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { ExerciseContext } from \"./ExerciseProvider\";\nimport { WorkoutContext } from \"../workout/WorkoutProvider\"\nimport { useHistory, useParams } from 'react-router-dom';\nimport \"./Exercise.css\";\n\n\nexport const ExerciseForm = (workout) => {\n    const { addExercise, getExerciseById, updateExercise } = useContext(ExerciseContext);\n    const [exercise, setExercise] = useState({})\n         \n\n    const { workouts, getWorkouts,  deleteExercise } = useContext(WorkoutContext)\n    \n      const [isLoading, setIsLoading] = useState(true);\n      const {exerciseId} = useParams();\n      \n      const history = useHistory();\n      \n      const handleControlledInputChange = (event) => {\n        const newExercise = { ...exercise }\n        \n        \n        newExercise[event.target.id] = event.target.value\n        \n        \n        setExercise(newExercise)\n      }\n    \n    const handleSaveExercise = () => {\n    const user = localStorage.getItem(\"fitnessforward_user\")\n\n    if (exercise.workoutId === 0 || exercise.name === \"\" || exercise.weightUsed === \"\" || exercise.restInterval === \"\")  {\n      window.alert(\"Please fill out the fields\")\n    } else {\n      setIsLoading(true);\n      if (exerciseId){\n        updateExercise({\n          id: parseInt(exercise.id),\n          workoutId:parseInt(exercise.workoutId),\n          userId: parseInt(user),\n          name: exercise.name,\n          weightUsed: exercise.weightUsed,\n          restInterval: exercise.restInterval,\n        })\n        .then(() => history.push(`/workouts/detail/${exercise.workoutId}`))\n      }else {\n        //setIsLoading(true);\n        addExercise({\n          id: parseInt(exercise.id),\n          userId: parseInt(user),\n          workoutId:parseInt(exercise.workoutId),\n          name: exercise.name,\n          weightUsed: exercise.weightUsed,\n          restInterval: exercise.restInterval,\n        })\n        .then(() => history.push(`/workouts/detail/${exercise.workoutId}`))\n      }\n    }\n  }\n\n    useEffect(() => {\n\n        if (exerciseId){\n          getExerciseById(exerciseId)\n          .then(exercise => {\n              setExercise(exercise);\n              setIsLoading(false);\n          })\n        } else {\n          setIsLoading(false);\n        }\n    }, \n    []);\n\n    //since state controlls this component, we no longer need\n    //useRef(null) or ref\n\n    return (\n      <form className=\"exerciseForm\">\n        <h2 className=\"exerciseForm__title\">{exerciseId ? <>Edit exercise</> : <>New exercise</>}</h2>\n        <fieldset>\n        <div className=\"form-group\">\n                  <label htmlFor=\"workout\">Assign to workout: </label>\n                  <select defaultValue={exercise.workoutId} name=\"workoutId\" id=\"workoutId\" className=\"form-control\" onChange={handleControlledInputChange}>\n                      <option value=\"0\">Select a workout</option>\n                      {workouts.map(w => (\n                          <option key={w.id} value={w.id}>\n                              {w.name}\n                          </option>\n                      ))}\n                  </select>\n              </div>\n          </fieldset>\n          <fieldset>\n              <div className=\"form-group\">\n                  <label htmlFor=\"name\">Exercise:</label>\n                  <input type=\"text\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Ex: deadlift\" value={exercise.name}/>\n              </div>\n          </fieldset>\n        \n          <fieldset>\n              <div className=\"form-group\">\n                  <label htmlFor=\"weightUsed\">Weight Used:</label>\n                  <input type=\"text\" id=\"weightUsed\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Ex: 135 lbs\" value={exercise.weightUsed}/>\n              </div>\n             \n          </fieldset>\n        \n          <fieldset>\n              <div className=\"form-group\">\n                  <label htmlFor=\"restInterval\">Rest Interval:</label>\n                  <input type=\"text\" id=\"restInterval\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"60 seconds\" value={exercise.restInterval}/>\n              </div>\n             \n          </fieldset>\n          <button className=\"btn btn-primary\"\n          disabled={isLoading}\n          onClick={event => {\n            event.preventDefault(); // Prevent browser from submitting the form and refreshing the page\n            handleSaveExercise();\n          }}>\n     {exerciseId ? <>Save exercise</> : <>Add exercise</>}</button> \n          \n      </form>\n    )\n} ","/Users/BenKimball/workspace/fitnessforward/src/components/workout/WorkoutDetail.js",["91"],"/Users/BenKimball/workspace/fitnessforward/src/components/exercise/ExerciseDetail.js",[],"/Users/BenKimball/workspace/fitnessforward/src/components/exercise/ExerciseProvider.js",[],"/Users/BenKimball/workspace/fitnessforward/src/components/workout/WorkoutProvider.js",[],"/Users/BenKimball/workspace/fitnessforward/src/components/exercise/ExerciseList.js",["92"],"import React, { useContext, useEffect } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { ExerciseCard } from \"./ExerciseCard\";\nimport { ExerciseContext } from \"./ExerciseProvider\";\n\nexport const ExerciseList = () => {\n\n  const { exercise, getExercise } = useContext(ExerciseContext)\n\n\n  useEffect(() => {\n    getExercise()\n  }, [])\n\n  const history = useHistory()\n\n\n\n  return (\n    <section className=\"exercises\">\n      <button className=\"backBtn\" onClick={() => history.goBack()}>Back</button>\n\n      {console.log(\"ExerciseList:Render\", exercise)}\n      <h2>Exercise</h2>\n      <button className='addExerciseBtn' onClick={() => { history.push(\"/exercises/create\") }}>\n        Add New Exercise\n          </button>\n      <div className=\"exerciseCards\">\n        {\n          exercise.map(e => {\n            return <ExerciseCard key={e.id} exercises={e} />\n          })\n        }\n\n      </div>\n    </section>\n\n  )\n\n}","/Users/BenKimball/workspace/fitnessforward/src/components/workout/WorkoutCard.js",[],"/Users/BenKimball/workspace/fitnessforward/src/components/exercise/ExerciseCard.js",[],"/Users/BenKimball/workspace/fitnessforward/src/components/PropsAndState.js",[],"/Users/BenKimball/workspace/fitnessforward/src/components/auth/Logout.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":18,"column":22,"nodeType":"99","endLine":18,"endColumn":121},{"ruleId":"100","severity":1,"message":"101","line":9,"column":11,"nodeType":"102","messageId":"103","endLine":9,"endColumn":19},{"ruleId":"104","severity":1,"message":"105","line":15,"column":6,"nodeType":"106","endLine":15,"endColumn":8,"suggestions":"107"},{"ruleId":"100","severity":1,"message":"108","line":6,"column":8,"nodeType":"102","messageId":"103","endLine":6,"endColumn":18},{"ruleId":"104","severity":1,"message":"109","line":86,"column":5,"nodeType":"106","endLine":86,"endColumn":7,"suggestions":"110"},{"ruleId":"104","severity":1,"message":"111","line":77,"column":5,"nodeType":"106","endLine":77,"endColumn":7,"suggestions":"112"},{"ruleId":"100","severity":1,"message":"113","line":3,"column":33,"nodeType":"102","messageId":"103","endLine":3,"endColumn":37},{"ruleId":"104","severity":1,"message":"114","line":11,"column":6,"nodeType":"106","endLine":11,"endColumn":8,"suggestions":"115"},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-unused-vars","'password' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getWorkouts'. Either include it or remove the dependency array.","ArrayExpression",["118"],"'DatePicker' is defined but never used.","React Hook useEffect has missing dependencies: 'getWorkoutById' and 'workoutId'. Either include them or remove the dependency array.",["119"],"React Hook useEffect has missing dependencies: 'exerciseId' and 'getExerciseById'. Either include them or remove the dependency array.",["120"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'getExercise'. Either include it or remove the dependency array.",["121"],"no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},"Update the dependencies array to be: [getWorkouts]",{"range":"130","text":"131"},"Update the dependencies array to be: [getWorkoutById, workoutId]",{"range":"132","text":"133"},"Update the dependencies array to be: [exerciseId, getExerciseById]",{"range":"134","text":"135"},"Update the dependencies array to be: [getExercise]",{"range":"136","text":"137"},[476,478],"[getWorkouts]",[2702,2704],"[getWorkoutById, workoutId]",[2623,2625],"[exerciseId, getExerciseById]",[347,349],"[getExercise]"]